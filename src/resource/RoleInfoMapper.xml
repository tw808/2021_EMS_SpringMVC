<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ems1.system.mapper.RoleInfoMapper">
    <resultMap id="BaseResultMap" type="com.ems1.po.RoleInfo">
        <id column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_desc" jdbcType="VARCHAR" property="roleDesc"/>
        <result column="role_status" jdbcType="VARCHAR" property="roleStatus"/>
    </resultMap>
    <sql id="Base_Column_List">
    role_id, role_name, role_desc, role_status
  </sql>
    <select id="getRoleInfoList" resultMap="BaseResultMap" parameterType="com.ems1.po.RoleInfo">
        select
        <include refid="Base_Column_List"/>
        from role_info where role_status !='0'
        <if test="roleId !=null and roleId!=''">
            and role_Id= #{roleId}
        </if>
        <if test="roleName !=null and roleName!=''">
            and role_name like #{roleName}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role_info
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role_info
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.ems1.po.RoleInfo">
    insert into role_info (role_id, role_name, role_desc, 
      role_status)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, 
      #{roleStatus,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.ems1.po.RoleInfo">
        insert into role_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleDesc != null">
                role_desc,
            </if>
            <if test="roleStatus != null">
                role_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="roleStatus != null">
                #{roleStatus,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ems1.po.RoleInfo">
        update role_info
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                role_desc = #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="roleStatus != null">
                role_status = #{roleStatus,jdbcType=VARCHAR},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ems1.po.RoleInfo">
    update role_info
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      role_status = #{roleStatus,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>